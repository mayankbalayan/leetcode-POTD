leetcode 679 24 NEW Game

LINK : - https://leetcode.com/problems/24-game/description/?envType=daily-question&envId=2025-08-18


#include <bits/stdc++.h>
using namespace std;

class Solution {
public:
    bool judgePoint24(vector<int>& cards) {
        vector<double> nums(cards.begin(), cards.end());
        return solve(nums);
    }

private:
    bool solve(vector<double>& nums) {
        const double EPS = 1e-6;
        int n = nums.size();

        // Base case: if only one number left, check if it's 24
        if (n == 1) {
            return fabs(nums[0] - 24.0) < EPS;
        }

        // Try all pairs of numbers
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < n; j++) {
                if (i == j) continue;

                // New list after removing nums[i] and nums[j]
                vector<double> next;
                for (int k = 0; k < n; k++) {
                    if (k != i && k != j) next.push_back(nums[k]);
                }

                // Try all 4 operators
                for (int op = 0; op < 4; op++) {
                    // Addition and multiplication are commutative,
                    // so to avoid duplicates, only apply if i < j
                    if ((op == 0 || op == 2) && i > j) continue;

                    double a = nums[i], b = nums[j], res = 0;

                    if (op == 0) res = a + b;
                    else if (op == 1) res = a - b;
                    else if (op == 2) res = a * b;
                    else if (op == 3) {
                        if (fabs(b) < EPS) continue; // avoid division by zero
                        res = a / b;
                    }

                    next.push_back(res);
                    if (solve(next)) return true;
                    next.pop_back();
                }
            }
        }
        return false;
    }
};
