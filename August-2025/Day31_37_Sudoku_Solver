37. Sudoku Solver


https://leetcode.com/problems/sudoku-solver/description/?envType=daily-question&envId=2025-08-31


class Solution {
public:
bool isSafe(int r,int c,int v,vector<vector<char>>&board){
 for(int i=0;i<9;i++){
    if(board[r][i]-'0'==v)return false;
    if(board[i][c]-'0'==v)return false;
    if(board[(r/3)*3+(i/3)][(c/3)*3+(i%3)]-'0'==v)return false;
 }  
 return true; 
}
  bool solve(vector<vector<char>>&board){
    for(int i=0;i<9;i++){
        for(int j=0;j<9;j++){
            if(board[i][j]=='.'){
                for(int val=1;val<=9;val++){
                    if(isSafe(i,j,val,board)){
                        board[i][j]=val+'0';
                        bool poss=solve(board);
                        if(poss)return true;
                        else board[i][j]='.';
                    }
                }
                return false;
            }
        }
    }
    return true;
  }
    void solveSudoku(vector<vector<char>>& board) {
        solve(board);
    }
};
