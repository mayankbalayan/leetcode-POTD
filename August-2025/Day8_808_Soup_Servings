808. Soup Servings

leetcode link :-  https://leetcode.com/problems/soup-servings/?envType=daily-question&envId=2025-08-08

class Solution {
public:
vector<pair<int,int>>serves = {{100,0},{75,25},{50,50},{25,75}};
double solve(int a, int b,vector<vector<double>>&dp){
    //base case 
        if(a<=0&&b<=0)return 0.5;
        if(a<=0&&b>0)return 1.0;
        if(a>0&&b<=0)return 0.0;

        if(dp[a][b]!=-1.0){
            return dp[a][b];
        }
     double prob = 0.0; 
       for(auto &p : serves){
        int A_taken = p.first;
        int B_taken = p.second;
        prob += solve(a-A_taken,b-B_taken,dp);
       }
       
     return dp[a][b] = 0.25*prob;
}
    double soupServings(int n) {
        if(n>=4800){
            return 1;
        }

        vector<vector<double>>dp(n+1,vector<double>(n+1,-1.0));
         return solve(n,n,dp);
    }
};
